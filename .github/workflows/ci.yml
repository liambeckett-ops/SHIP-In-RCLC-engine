name: Solvine Systems CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_unified.txt
    
    - name: Test imports
      run: |
        python -c "import config.config_loader; print('‚úÖ Config import successful')"
        python -c "import interfaces.unified_cli; print('‚úÖ CLI import successful')"
    
    - name: Validate project structure
      run: |
        python -c "
        import os
        required_dirs = ['agents', 'config', 'interfaces', 'memory', 'src', 'tests']
        for dir_name in required_dirs:
            if os.path.exists(dir_name):
                print(f'‚úÖ {dir_name}/ directory exists')
            else:
                print(f'‚ùå {dir_name}/ directory missing')
                exit(1)
        print('‚úÖ Project structure validation passed')
        "
    
    - name: Check main entry point
      run: |
        python main_unified.py --help
    
    - name: Basic smoke test
      run: |
        echo "üß™ Running basic functionality test"
        python -c "
        try:
            from config.config_loader import get_config_loader
            config_loader = get_config_loader()
            print('‚úÖ Configuration loader created successfully')
        except Exception as e:
            print(f'‚ùå Configuration test failed: {e}')
            exit(1)
        "
